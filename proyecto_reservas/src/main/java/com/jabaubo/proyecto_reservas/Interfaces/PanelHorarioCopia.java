/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.jabaubo.proyecto_reservas.Interfaces;

import com.jabaubo.proyecto_reservas.Clases.Horario;
import com.jabaubo.proyecto_reservas.Clases.HorarioRender;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Javier
 */
public class PanelHorario extends javax.swing.JPanel {

    /**
     * Creates new form PanelHorario
     */
    public PanelHorario() {
        initComponents();
        JSONArray jsonArray = cargarHorarioAPI();
        ArrayList<Horario> lista = new ArrayList<>();
        DefaultListModel<Horario> modelo = new DefaultListModel<>();
        for (int i = 0 ; i < jsonArray.length() ; i++){
            try {
                JSONObject jsonObject = jsonArray.getJSONObject(i);
                String dia = jsonObject.getString("dia");
                Boolean cerrado = jsonObject.getInt("cerrado")==1;
                String hora_inicio_m = jsonObject.getString("hora_inicio_m").substring(0,jsonObject.getString("hora_inicio_m").lastIndexOf(":"));
                String hora_fin_m = jsonObject.getString("hora_fin_m").substring(0,jsonObject.getString("hora_fin_m").lastIndexOf(":"));
                String hora_inicio_t = jsonObject.getString("hora_inicio_t").substring(0,jsonObject.getString("hora_inicio_t").lastIndexOf(":"));
                String hora_fin_t = jsonObject.getString("hora_fin_t").substring(0,jsonObject.getString("hora_fin_t").lastIndexOf(":"));
                Horario h = new Horario(dia,cerrado,hora_inicio_m,hora_fin_m,hora_inicio_t,hora_fin_t);
                lista.add(h);
                modelo.addElement(h);
            } catch (JSONException e) {
                throw new RuntimeException(e);
            }
        }
        //jListHorario.setModel(modelo);
        //jListHorario.setCellRenderer(new HorarioRender());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Lunes", null, null, null, null, null},
                {"Martes", null, null, null, null, null},
                {"Miercoles", null, null, null, null, null},
                {"Jueves", null, null, null, null, null},
                {"Viernes", null, null, null, null, null},
                {"Sabado", null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Día", "Cerrado", "Hora Inicio Mañana", "Hora Fin Mañana", "Hora Inicio Tarde", "Hora Fin Tarde"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1550, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1677, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    public JSONArray cargarHorarioAPI(){
        String[] responseStr = new String[1];
        Runnable runnable= new Runnable() {
            @Override
            public void run() {
                // Conectamos a la pagina con el método que queramos
                try {
                    URL url = new URL("https://reservante.mjhudesings.com/slim/gethorario");
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("GET");
                    int responseCode = connection.getResponseCode();

                    //Ver si la respuesta es correcta
                    if (responseCode == HttpURLConnection.HTTP_OK) {
                        // Si es correcta la leemos
                        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        String line;
                        StringBuilder response = new StringBuilder();
                        while ((line = reader.readLine()) != null) {
                            response.append(line);
                        }
                        reader.close();
                        responseStr[0] = response.toString();
                        connection.disconnect();
                    } else {
                        connection.disconnect();
                    }
                } catch (MalformedURLException e) {
                    throw new RuntimeException(e);
                } catch (ProtocolException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }

            }
        };
        Thread thread = new Thread(runnable);
        thread.start();
        try {
            thread.join();
        } catch (InterruptedException ex) {
            throw new RuntimeException(ex);
        }
        try {
            JSONArray jsonArray = new JSONObject(responseStr[0]).getJSONArray("horarios");
            return jsonArray;
        } catch (JSONException e) {
            throw new RuntimeException(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

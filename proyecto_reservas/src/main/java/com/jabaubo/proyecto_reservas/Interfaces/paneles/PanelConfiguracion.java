/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.jabaubo.proyecto_reservas.Interfaces.paneles;

import com.jabaubo.proyecto_reservas.Clases.Salon;
import com.jabaubo.proyecto_reservas.Clases.SalonRender;
import com.jabaubo.proyecto_reservas.Clases.Vacaciones;
import com.jabaubo.proyecto_reservas.Clases.VacacionesRender;
import com.jabaubo.proyecto_reservas.Interfaces.dialogs.VacacionesDialog;
import com.jabaubo.proyecto_reservas.Interfaces.InterfazPrincipal;
import com.jabaubo.proyecto_reservas.Interfaces.dialogs.SalonDialog;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author pokem
 */
public class PanelConfiguracion extends javax.swing.JPanel {

    ArrayList<Vacaciones> listaVacaciones = new ArrayList<>();
    private InterfazPrincipal interfazPrincipal;
    private int restaurante;

    /**
     * Creates new form MiRestauranteUI
     */
    public PanelConfiguracion(InterfazPrincipal interfazPrincipal, int restaurante) {

        this.interfazPrincipal = interfazPrincipal;
        this.restaurante = restaurante;
        initComponents();
        cargarDatos();
    }

    public void cargarDatos() {
        JSONObject json = leerDatosRestaurante();
        JSONObject jsonRestaurante = json.getJSONArray("resultado").getJSONObject(0);
        cargarSalones();
        tfNombre.setText(jsonRestaurante.getString("nombre"));
        tfTlf1.setText(jsonRestaurante.getString("telefono1"));
        tfTlf2.setText(jsonRestaurante.getString("telefono2"));
        tfEmail.setText(jsonRestaurante.getString("email"));
        tfDireccion.setText(jsonRestaurante.getString("direccion"));
        String duracionStr[] = jsonRestaurante.getString("duracion_reservas").split(":");
        jcbHora.setSelectedItem(duracionStr[0]);
        jcbMinutos.setSelectedItem(duracionStr[1]);
        jcbSegundos.setSelectedItem(duracionStr[2]);

        JSONArray jsonArrayVacaciones = json.getJSONArray("resultado2");
        DefaultListModel<Vacaciones> modelo = new DefaultListModel<>();
        for (int i = 0; i < jsonArrayVacaciones.length(); i++) {
            JSONObject jsonVacacion = jsonArrayVacaciones.getJSONObject(i);
            System.out.println(jsonVacacion);
            Vacaciones v = new Vacaciones(jsonVacacion.getString("nombre"), jsonVacacion.getString("inicio"), jsonVacacion.getString("fin"), interfazPrincipal.getRestaurante(), jsonVacacion.getInt("id_vacacion"));
            listaVacaciones.add(v);
            modelo.addElement(v);
        }
        jListVacaciones.setModel(modelo);
        jListVacaciones.setCellRenderer(new VacacionesRender());
        jbInsertarSalones.setForeground(new Color(221, 221, 221));
        jbInsertarVacaciones.setForeground(new Color(221, 221, 221));
        jbGuardarDatos.setForeground(new Color(221, 221, 221));

        jbInsertarSalones.setBackground(new Color(109, 34, 109));
        jbInsertarVacaciones.setBackground(new Color(109, 34, 109));
        jbGuardarDatos.setBackground(new Color(109, 34, 109));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfTlf1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfTlf2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfDireccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jbGuardarDatos = new javax.swing.JButton();
        jcbHora = new javax.swing.JComboBox<>();
        jLabel105 = new javax.swing.JLabel();
        jcbMinutos = new javax.swing.JComboBox<>();
        jLabel106 = new javax.swing.JLabel();
        jcbSegundos = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSalones = new javax.swing.JList<>();
        jbInsertarSalones = new javax.swing.JButton();
        jbInsertarVacaciones = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListVacaciones = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 255));
        setPreferredSize(new java.awt.Dimension(538, 300));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Nombre");

        tfNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Teléfono 1");

        tfTlf1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tfTlf1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Teléfono 2");

        tfTlf2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tfTlf2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Email");

        tfEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEmailActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Dirección");

        tfDireccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Duración de las reservas");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Datos del restaurante");

        jbGuardarDatos.setBackground(new java.awt.Color(109, 34, 109));
        jbGuardarDatos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbGuardarDatos.setForeground(new java.awt.Color(221, 221, 221));
        jbGuardarDatos.setText("Guardar");
        jbGuardarDatos.setBorderPainted(false);
        jbGuardarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarDatosActionPerformed(evt);
            }
        });

        jcbHora.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jcbHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        jLabel105.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel105.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel105.setText(":");

        jcbMinutos.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jcbMinutos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jcbMinutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMinutosActionPerformed(evt);
            }
        });

        jLabel106.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel106.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel106.setText(":");

        jcbSegundos.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jcbSegundos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jcbSegundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSegundosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbGuardarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfTlf1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfTlf2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfEmail)
                                    .addComponent(tfDireccion)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jcbHora, 0, 176, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcbMinutos, 0, 176, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcbSegundos, 0, 178, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jcbHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel106)
                                .addComponent(jcbSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jcbMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel105))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfTlf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfTlf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbGuardarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Salones");

        jListSalones.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListSalonesValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListSalones);

        jbInsertarSalones.setBackground(new java.awt.Color(109, 34, 109));
        jbInsertarSalones.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbInsertarSalones.setForeground(new java.awt.Color(221, 221, 221));
        jbInsertarSalones.setText("Insertar");
        jbInsertarSalones.setBorderPainted(false);
        jbInsertarSalones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsertarSalonesActionPerformed(evt);
            }
        });

        jbInsertarVacaciones.setBackground(new java.awt.Color(109, 34, 109));
        jbInsertarVacaciones.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbInsertarVacaciones.setForeground(new java.awt.Color(221, 221, 221));
        jbInsertarVacaciones.setText("Insertar");
        jbInsertarVacaciones.setBorderPainted(false);
        jbInsertarVacaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsertarVacacionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbInsertarSalones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbInsertarVacaciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbInsertarVacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbInsertarSalones, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbInsertarSalones, jbInsertarVacaciones});

        jListVacaciones.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListVacacionesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListVacaciones);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Vacaciones");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1344, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void cargarSalones() {
        String[] responseStr = new String[1];
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                // Conectamos a la pagina con el método que queramos
                try {
                    URL url = new URL("https://reservante.mjhudesings.com/slim/getsalones");
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("POST");
                    connection.setDoOutput(true);
                    connection.setRequestProperty("Content-Type", "application/json");
                    connection.setRequestProperty("Accept", "application/json");
                    OutputStream os = connection.getOutputStream();
                    OutputStreamWriter osw = new OutputStreamWriter(os, "UTF-8");
                    String jsonStr = "{\n"
                            + "    \"id\":\"#PARAMID#\"\n"
                            + "}";
                    jsonStr = jsonStr.replace("#PARAMID#", String.valueOf(restaurante));
                    osw.write(jsonStr);
                    System.out.println(jsonStr);
                    osw.flush();

                    int responseCode = connection.getResponseCode();

                    //Ver si la respuesta es correcta
                    if (responseCode == HttpURLConnection.HTTP_OK) {
                        // Si es correcta la leemos
                        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        String line;
                        StringBuilder response = new StringBuilder();
                        while ((line = reader.readLine()) != null) {
                            response.append(line);
                        }
                        reader.close();
                        responseStr[0] = response.toString();
                        connection.disconnect();
                    } else {
                        connection.disconnect();
                    }
                } catch (MalformedURLException e) {
                    throw new RuntimeException(e);
                } catch (ProtocolException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }

            }
        };
        Thread thread = new Thread(runnable);
        thread.start();
        try {
            thread.join();
        } catch (InterruptedException ex) {
            throw new RuntimeException(ex);
        }
        JSONArray jsonArray;
        try {
            System.out.println("Respuesta json: " + responseStr[0]);
            jsonArray = new JSONObject(responseStr[0]).getJSONArray("aforo");
            ArrayList<Salon> lista = new ArrayList<>();
            DefaultListModel<Salon> modelo = new DefaultListModel<>();
            for (int i = 0; i < jsonArray.length(); i++) {
                JSONObject jsonObject = (JSONObject) jsonArray.get(i);
                Salon s = new Salon(jsonObject.getInt("id_salon"), jsonObject.getString("nombre"), jsonObject.getInt("aforo"), interfazPrincipal.getRestaurante());
                lista.add(s);
                modelo.addElement(s);
            }
            jListSalones.setModel(modelo);
            jListSalones.setCellRenderer(new SalonRender());

        } catch (JSONException e) {
            System.out.println("No hay salones");
        }
    }
    private void jbGuardarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarDatosActionPerformed
        // TODO add your handling code here:
        String nombre = tfNombre.getText();
        String tlf1Str = tfTlf1.getText();
        String tlf2Str = tfTlf2.getText();
        String direccion = tfDireccion.getText();
        String email = tfEmail.getText();
        String duracion = jcbHora.getSelectedItem() + ":" + jcbMinutos.getSelectedItem() + ":" + jcbSegundos.getSelectedItem();

        String json = "        {\n"
                + "             \"id\": \"#PARAMID#\",\n"
                + "            \"nombre\": \"#PARAMPRUEBAS#\",\n"
                + "            \"telefono1\": \"#PARAMTLF1#\",\n"
                + "            \"telefono2\": \"#PARAMTLF2#\",\n"
                + "            \"email\": \"#PARAMEMAIL#\",\n"
                + "            \"direccion\": \"#PARAMDIR#\",\n"
                + "            \"duracion_reservas\": \"#PARAMDUR#\"\n"
                + "        }";

        json = json.replace("#PARAMPRUEBAS#", nombre)
                .replace("#PARAMTLF1#", tlf1Str)
                .replace("#PARAMTLF2#", tlf2Str)
                .replace("#PARAMEMAIL#", email)
                .replace("#PARAMDIR#", direccion)
                .replace("#PARAMDUR#", duracion)
                .replace("#PARAMID#", String.valueOf(interfazPrincipal.getRestaurante()));
        final String jsonF = json;
        final String[] responseStr = new String[1];
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                // Conectamos a la pagina con el método que queramos
                try {
                    URL url = new URL("https://reservante.mjhudesings.com/slim/updatedatos");
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("PUT");
                    connection.setDoOutput(true);
                    connection.setRequestProperty("Content-Type", "application/json");
                    connection.setRequestProperty("Accept", "application/json");
                    OutputStream os = connection.getOutputStream();
                    OutputStreamWriter osw = new OutputStreamWriter(os, "UTF-8");
                    osw.write(jsonF);
                    System.out.println(jsonF);
                    osw.flush();
                    int responseCode = connection.getResponseCode();
                    //Ver si la respuesta es correcta
                    if (responseCode == HttpURLConnection.HTTP_OK) {
                        // Si es correcta la leemos
                        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        String line;
                        StringBuilder response = new StringBuilder();
                        while ((line = reader.readLine()) != null) {
                            response.append(line);
                        }
                        reader.close();
                        responseStr[0] = response.toString();
                        connection.disconnect();
                    } else {
                        connection.disconnect();
                    }
                } catch (MalformedURLException e) {
                    throw new RuntimeException(e);
                } catch (ProtocolException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }

            }
        };
        Thread thread = new Thread(runnable);
        thread.start();
        try {
            thread.join();
        } catch (InterruptedException ex) {
            throw new RuntimeException(ex);
        }
        try {
            System.out.println(responseStr[0]);
            if (responseStr[0].contains("correctamente")) {
                JOptionPane.showMessageDialog(interfazPrincipal, "Datos actualizados", "Mensaje", JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(interfazPrincipal, "Error al actualizar", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } catch (JSONException e) {
            throw new RuntimeException(e);
        }

    }//GEN-LAST:event_jbGuardarDatosActionPerformed

    private void tfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEmailActionPerformed

    private void jbInsertarVacacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsertarVacacionesActionPerformed
        // TODO add your handling code here:
        VacacionesDialog insertarVacacion = new VacacionesDialog(interfazPrincipal, true);
        insertarVacacion.setVisible(true);
        JSONObject json = leerDatosRestaurante();
        try {
            JSONArray jsonArrayVacaciones = json.getJSONArray("resultado2");
            DefaultListModel<Vacaciones> modelo = new DefaultListModel<>();
            for (int i = 0; i < jsonArrayVacaciones.length(); i++) {
                JSONObject jsonVacacion = jsonArrayVacaciones.getJSONObject(i);
                System.out.println(jsonVacacion);
                Vacaciones v = new Vacaciones(jsonVacacion.getString("nombre"), jsonVacacion.getString("inicio"), jsonVacacion.getString("fin"), interfazPrincipal.getRestaurante(), jsonVacacion.getInt("id_vacacion"));
                listaVacaciones.add(v);
                modelo.addElement(v);
            }
            jListVacaciones.setModel(modelo);
            jListVacaciones.setCellRenderer(new VacacionesRender());
        } catch (JSONException e) {
            System.out.println("No hay vacas");
        }
    }//GEN-LAST:event_jbInsertarVacacionesActionPerformed

    private void jListVacacionesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListVacacionesValueChanged
        // TODO add your handling code here:
        if (jListVacaciones.getSelectedIndex() >= 0) {
            VacacionesDialog insertarVacacion = new VacacionesDialog(interfazPrincipal, true, jListVacaciones.getSelectedValue());
            insertarVacacion.setVisible(true);
            JSONObject json = leerDatosRestaurante();
            try {
                JSONArray jsonArrayVacaciones = json.getJSONArray("resultado2");
                DefaultListModel<Vacaciones> modelo = new DefaultListModel<>();
                for (int i = 0; i < jsonArrayVacaciones.length(); i++) {
                    JSONObject jsonVacacion = jsonArrayVacaciones.getJSONObject(i);
                    System.out.println(jsonVacacion);
                    Vacaciones v = new Vacaciones(jsonVacacion.getString("nombre"), jsonVacacion.getString("inicio"), jsonVacacion.getString("fin"), interfazPrincipal.getRestaurante(), jsonVacacion.getInt("id_vacacion"));
                    listaVacaciones.add(v);
                    modelo.addElement(v);
                }
                jListVacaciones.setModel(modelo);
                jListVacaciones.setCellRenderer(new VacacionesRender());
            } catch (JSONException e) {
                System.out.println("No hay vacas");
            }
        }
    }//GEN-LAST:event_jListVacacionesValueChanged

    private void jbInsertarSalonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsertarSalonesActionPerformed
        // TODO add your handling code here:
        SalonDialog sd = new SalonDialog(interfazPrincipal, true);
        sd.setVisible(true);
        cargarSalones();
    }//GEN-LAST:event_jbInsertarSalonesActionPerformed

    private void jListSalonesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListSalonesValueChanged
        // TODO add your handling code here:
        if (jListSalones.getSelectedIndex() >= 0) {
            SalonDialog sd = new SalonDialog(interfazPrincipal, true, jListSalones.getSelectedValue());
            sd.setVisible(true);
            cargarSalones();
        }
    }//GEN-LAST:event_jListSalonesValueChanged

    private void jcbMinutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMinutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbMinutosActionPerformed

    private void jcbSegundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSegundosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbSegundosActionPerformed
    public JSONObject leerDatosRestaurante() {
        String[] responseStr = new String[1];
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                // Conectamos a la pagina con el método que queramos
                try {
                    URL url = new URL("https://reservante.mjhudesings.com/slim/getdatos");
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("POST");
                    connection.setDoOutput(true);
                    connection.setRequestProperty("Content-Type", "application/json");
                    connection.setRequestProperty("Accept", "application/json");
                    OutputStream os = connection.getOutputStream();
                    OutputStreamWriter osw = new OutputStreamWriter(os, "UTF-8");
                    String jsonStr = "{\n"
                            + "    \"id\":\"#PARAMID#\"\n"
                            + "}";
                    jsonStr = jsonStr.replace("#PARAMID#", String.valueOf(restaurante));
                    osw.write(jsonStr);
                    System.out.println(jsonStr);
                    osw.flush();
                    int responseCode = connection.getResponseCode();
                    //Ver si la respuesta es correcta
                    if (responseCode == HttpURLConnection.HTTP_OK) {
                        // Si es correcta la leemos
                        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        String line;
                        StringBuilder response = new StringBuilder();
                        while ((line = reader.readLine()) != null) {
                            response.append(line);
                        }
                        reader.close();
                        responseStr[0] = response.toString();
                        connection.disconnect();
                    } else {
                        connection.disconnect();
                    }
                } catch (MalformedURLException e) {
                    throw new RuntimeException(e);
                } catch (ProtocolException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }

            }
        };
        Thread thread = new Thread(runnable);
        thread.start();
        try {
            thread.join();
        } catch (InterruptedException ex) {
            throw new RuntimeException(ex);
        }
        try {
            System.out.println(responseStr[0]);
            JSONObject jsonObject = new JSONObject(responseStr[0]);
            return jsonObject;
        } catch (JSONException e) {
            throw new RuntimeException(e);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<Salon> jListSalones;
    private javax.swing.JList<Vacaciones> jListVacaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbGuardarDatos;
    private javax.swing.JButton jbInsertarSalones;
    private javax.swing.JButton jbInsertarVacaciones;
    private javax.swing.JComboBox<String> jcbHora;
    private javax.swing.JComboBox<String> jcbMinutos;
    private javax.swing.JComboBox<String> jcbSegundos;
    private javax.swing.JTextField tfDireccion;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTlf1;
    private javax.swing.JTextField tfTlf2;
    // End of variables declaration//GEN-END:variables
}
